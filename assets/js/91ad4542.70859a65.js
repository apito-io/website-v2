"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[7646,8105],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,ah:()=>c,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39592:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(87462),a=(r(67294),r(3905)),o=r(23552);const i={sidebar_label:"Ruby",title:"Apito REST API Integration with Ruby Project"},p=void 0,s={unversionedId:"api-integration/restapi/integration-with-ruby",id:"api-integration/restapi/integration-with-ruby",title:"Apito REST API Integration with Ruby Project",description:"Net/HTTP is a default Ruby class. It is most of the time used along with URI.",source:"@site/docs/api-integration/restapi/integration-with-ruby.mdx",sourceDirName:"api-integration/restapi",slug:"/api-integration/restapi/integration-with-ruby",permalink:"/docs/api-integration/restapi/integration-with-ruby",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-integration/restapi/integration-with-ruby.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Ruby",title:"Apito REST API Integration with Ruby Project"},sidebar:"docs",previous:{title:"Python",permalink:"/docs/api-integration/restapi/integration-with-python"},next:{title:"GraphQL Client",permalink:"/docs/category/graphql-client"}},c={},u=[],l={toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{property:"og:type",content:"article"})),(0,a.kt)("p",null,"Net/HTTP is a default Ruby class. It is most of the time used along with URI."),(0,a.kt)(o.default,{mdxType:"ApiSecretNote"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.apito.io/secured/rest/project\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"content-type\"] = 'application/json'\nrequest[\"authorization\"] = 'Bearer API_SECRET'\n\nresponse = http.request(request)\nputs response.read_body\n")))}d.isMDXComponent=!0},23552:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={},i=void 0,p={unversionedId:"api-integration/restapi/shared/api-secret-note",id:"api-integration/restapi/shared/api-secret-note",title:"api-secret-note",description:"Always remember to replace API_SECRET of the Bearer Token and project-id of the URL with the correct value from apito console.",source:"@site/docs/api-integration/restapi/shared/api-secret-note.mdx",sourceDirName:"api-integration/restapi/shared",slug:"/api-integration/restapi/shared/api-secret-note",permalink:"/docs/api-integration/restapi/shared/api-secret-note",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-integration/restapi/shared/api-secret-note.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[],u={toc:c};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Always remember to replace ",(0,a.kt)("inlineCode",{parentName:"p"},"API_SECRET")," of the Bearer Token and ",(0,a.kt)("inlineCode",{parentName:"p"},"project-id")," of the URL with the correct value from apito console.\nGo to ",(0,a.kt)("a",{parentName:"p",href:"/docs/console/api-integration-with-your-application"},"this page")," if you do not know where to find your api secrets and endpoints for your project")))}l.isMDXComponent=!0}}]);