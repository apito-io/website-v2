"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[9234],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,ah:()=>s,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return t?a.createElement(b,i(i({ref:n},u),{},{components:t})):a.createElement(b,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},61694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={title:"Creating A Lambda Function ( NodeJS )",sidebar_label:"Create a Lambda Function",image:"https://cdn.apito.io/media/apito_documentation/Z53X2APN0M_Apito_Console___AWS_Lambda_Code.png",keywords:["database model","api design","api","database normalization","nosql","nosql database design","cloud functions","aws lambda"]},i=void 0,l={unversionedId:"extensions/logic/create-lambda-function",id:"extensions/logic/create-lambda-function",title:"Creating A Lambda Function ( NodeJS )",description:"Log on to your AWS Lambda Console and Navigate to Lambda and click on the Create function button on the right.",source:"@site/docs/extensions/logic/create-lambda-function.mdx",sourceDirName:"extensions/logic",slug:"/extensions/logic/create-lambda-function",permalink:"/docs/extensions/logic/create-lambda-function",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/extensions/logic/create-lambda-function.mdx",tags:[],version:"current",frontMatter:{title:"Creating A Lambda Function ( NodeJS )",sidebar_label:"Create a Lambda Function",image:"https://cdn.apito.io/media/apito_documentation/Z53X2APN0M_Apito_Console___AWS_Lambda_Code.png",keywords:["database model","api design","api","database normalization","nosql","nosql database design","cloud functions","aws lambda"]},sidebar:"docs",previous:{title:"Create an Apito Function",permalink:"/docs/extensions/logic/create-apito-function"},next:{title:"Connecting Functions",permalink:"/docs/extensions/logic/connecting-function"}},c={},s=[{value:"Example - Save Email Subscription",id:"example---save-email-subscription",level:2},{value:"Write your AWS Lambda Function",id:"write-your-aws-lambda-function",level:3},{value:"Publishing AWS Lambda Function",id:"publishing-aws-lambda-function",level:3}],u={toc:s};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("head",null,(0,o.kt)("meta",{property:"og:type",content:"article"})),(0,o.kt)("p",null,"Log on to your AWS Lambda Console and Navigate to ",(0,o.kt)("inlineCode",{parentName:"p"},"Lambda")," and click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Create function")," button on the right.\nFollow the step below to create a function and upload your code"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Choose ",(0,o.kt)("inlineCode",{parentName:"li"},"Author from scratch")," option from the tab."),(0,o.kt)("li",{parentName:"ol"},"Enter a ",(0,o.kt)("inlineCode",{parentName:"li"},"Function name")," and choose your favourite ",(0,o.kt)("inlineCode",{parentName:"li"},"Runtime"),". Leave all things default for now."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("inlineCode",{parentName:"li"},"Create function")," to create a lambda function.")),(0,o.kt)("p",null,"Wait till your function is ready."),(0,o.kt)("h2",{id:"example---save-email-subscription"},"Example - Save Email Subscription"),(0,o.kt)("p",null,"Follow the same steps as above and create a function called ",(0,o.kt)("inlineCode",{parentName:"p"},"saveSubscriptionNodeJS")," and choose ",(0,o.kt)("inlineCode",{parentName:"p"},"nodeJs 14.x")," as runtime. You will see a picture like below."),(0,o.kt)("img",{alt:"AWS Lambda Configuration",width:"auto",height:"auto",src:"https://cdn.apito.io/media/apito_documentation/Z53X2APN0M_Apito_Console___AWS_Lambda_Code.png"}),(0,o.kt)("h3",{id:"write-your-aws-lambda-function"},"Write your AWS Lambda Function"),(0,o.kt)("p",null,"Paste the following code into the code section of your editor that you can see in your AWS IDE for Lambda"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const axios = require('axios');\nconst gql = require('graphql-tag');\nconst graphql = require('graphql');\nconst { print } = graphql;\n\nconst createSubscriber = gql`\n    mutation CreateSubscriber($phone: String) {\n        createSubscriber(payload: {phone: $phone}) {\n            id\n            data {\n                phone\n            }\n        }\n    }`\n\nexports.handler = async (event, context, callback) => {\n    try {\n        console.log(event);\n        let incomingRequest = event.payload;\n        const phone = incomingRequest.phone;\n        if (phone == null || phone == \"\") {\n            console.log('phone number not found');\n            return {\n                statusCode: 400,\n                errorMessage: \"Phone Number Not Found In the Request\"\n            }\n        }\n        const graphqlData = await axios({\n            url: process.env.APITO_URL,\n            method: 'post',\n            headers: {\n                'Authorization': `Bearer ${process.env.APITO_TOKEN}`\n            },\n            data: {\n                query: print(createSubscriber),\n                variables: {\n                    phone: phone\n                }\n            }\n        });\n        return {\n            subscriber: graphqlData.data.data.createSubscriber\n        }\n\n    } catch (err) {\n        console.log('error posting to appsync: ', err);\n        return {\n            statusCode: 400,\n            errorMessage: err\n        }\n    }\n};\n")),(0,o.kt)("p",null,"In the code above, we are checking if the phone number is provided or not ( You can add phone number validation if you want) and then using a graphql client we are storing the\nphone number into our own model called ",(0,o.kt)("inlineCode",{parentName:"p"},"subscriber")),(0,o.kt)("h3",{id:"publishing-aws-lambda-function"},"Publishing AWS Lambda Function"),(0,o.kt)("p",null,"Each time you make any changes Click ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy")," button to save and apply your changes."))}p.isMDXComponent=!0}}]);