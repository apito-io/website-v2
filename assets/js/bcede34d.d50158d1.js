"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[3964,1423],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,ah:()=>s,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,g=u["".concat(l,".").concat(d)]||u[d]||h[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},68569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905)),o=n(67714);const i={sidebar_label:"Python",title:"GraphQL API Integration with Python Project"},p=void 0,l={unversionedId:"api-integration/graphql/integration-with-python",id:"api-integration/graphql/integration-with-python",title:"GraphQL API Integration with Python Project",description:"This is a GraphQL client for Python 3.6+. Plays nicely with graphene, graphql-core, graphql-js and any other GraphQL implementation compatible with the spec.",source:"@site/docs/api-integration/graphql/integration-with-python.mdx",sourceDirName:"api-integration/graphql",slug:"/api-integration/graphql/integration-with-python",permalink:"/docs/api-integration/graphql/integration-with-python",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-integration/graphql/integration-with-python.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Python",title:"GraphQL API Integration with Python Project"},sidebar:"docs",previous:{title:"PHP",permalink:"/docs/api-integration/graphql/integration-with-php"},next:{title:"Ruby",permalink:"/docs/api-integration/graphql/integration-with-ruby"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Detailed Guide",id:"detailed-guide",level:2}],h={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{property:"og:type",content:"article"})),(0,a.kt)("p",null,"This is a GraphQL client for Python 3.6+. Plays nicely with ",(0,a.kt)("inlineCode",{parentName:"p"},"graphene"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql-core"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql-js")," and any other GraphQL implementation compatible with the spec."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"WARNING"),": Please note that the following documentation describes the current version which is currently only available as a pre-release and needs to be installed with")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ pip install --pre gql[all]\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"NOTE"),": See also ",(0,a.kt)("a",{parentName:"p",href:"https://gql.readthedocs.io/en/latest/intro.html#less-dependencies"},"the documentation")," to install GQL with less extra dependencies")),(0,a.kt)(o.default,{mdxType:"ApiSecretNote"}),(0,a.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from gql import gql, Client\nfrom gql.transport.aiohttp import AIOHTTPTransport\n\n# Select your transport with a defined url endpoint\ntransport = AIOHTTPTransport(url="https://api.apito.io/secured/graphql", headers={\'Authorization\': \'Bearer API_SECRET\'})\n\n# Create a GraphQL client using the defined transport\nclient = Client(transport=transport, fetch_schema_from_transport=True)\n\n# Provide a GraphQL query\nquery = gql(\n    """\n    query getContinents {\n      continents {\n        code\n        name\n      }\n    }\n"""\n)\n\n# Execute the query on the transport\nresult = client.execute(query)\nprint(result)\n')),(0,a.kt)("h2",{id:"detailed-guide"},"Detailed Guide"),(0,a.kt)("p",null,"For a detailed guide, be sure to check out the official github page ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphql-python/gql"},"here")))}u.isMDXComponent=!0},67714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={},i=void 0,p={unversionedId:"api-integration/graphql/shared/api-secret-note",id:"api-integration/graphql/shared/api-secret-note",title:"api-secret-note",description:"Always remember to replace API_SECRET with the correct value that you copied from apito console.",source:"@site/docs/api-integration/graphql/shared/api-secret-note.mdx",sourceDirName:"api-integration/graphql/shared",slug:"/api-integration/graphql/shared/api-secret-note",permalink:"/docs/api-integration/graphql/shared/api-secret-note",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-integration/graphql/shared/api-secret-note.mdx",tags:[],version:"current",frontMatter:{}},l={},s=[],c={toc:s};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Always remember to replace ",(0,a.kt)("inlineCode",{parentName:"p"},"API_SECRET")," with the correct value that you copied from apito console.\nGo to ",(0,a.kt)("a",{parentName:"p",href:"/docs/console/api-integration-with-your-application"},"this page")," if you do not know where to find your api secrets for your project")))}h.isMDXComponent=!0}}]);