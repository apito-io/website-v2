"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[5114],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,ah:()=>p,kt:()=>h});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(a),h=o,m=c["".concat(l,".").concat(h)]||c[h]||d[h]||i;return a?n.createElement(m,r(r({ref:t},u),{},{components:a})):n.createElement(m,r({ref:t},u))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},18526:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const i={slug:"firebase-vs-apito-quick-comparison",title:"Firebase vs Apito a Quick Comparison",tags:["fahim"]},r=void 0,s={permalink:"/blog/firebase-vs-apito-quick-comparison",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-09-12-firebase-vs-apito-quick-comparison.md",source:"@site/blog/2021-09-12-firebase-vs-apito-quick-comparison.md",title:"Firebase vs Apito a Quick Comparison",description:"Internet is filled with tons of articles and tutorials that talk about building production-ready and scalable apps",date:"2021-09-12T00:00:00.000Z",formattedDate:"September 12, 2021",tags:[{label:"fahim",permalink:"/blog/tags/fahim"}],readingTime:5.7,hasTruncateMarker:!1,authors:[],frontMatter:{slug:"firebase-vs-apito-quick-comparison",title:"Firebase vs Apito a Quick Comparison",tags:["fahim"]},prevItem:{title:"REST API vs GraphQL | Why not Both!",permalink:"/blog/rest-api-vs-graphql-a-detailed-comparison"}},l={authorsImageUrls:[]},p=[{value:"Comparing Apples to Applesauce",id:"comparing-apples-to-applesauce",level:2},{value:"Database Design, Migration &amp; Content Management",id:"database-design-migration--content-management",level:3},{value:"Data modeling",id:"data-modeling",level:3},{value:"Role based Permissions",id:"role-based-permissions",level:3},{value:"A Back-end for SaaS Apps",id:"a-back-end-for-saas-apps",level:3},{value:"To summarize our points, Apito has many advantages including",id:"to-summarize-our-points-apito-has-many-advantages-including",level:2},{value:"GraphQL or RESTful API? Why not Both?",id:"graphql-or-restful-api-why-not-both",level:3},{value:"Role-Based Security",id:"role-based-security",level:3},{value:"Conclusion",id:"conclusion",level:3}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'Internet is filled with tons of articles and tutorials that talk about building production-ready and scalable apps\nfor both web and mobile. Developers often time get caught up trying to apply the same principle or guide but often time\nthey ended up "re-inventing the wheel" Apito and Firebase both come with Backend as a Service (BaaS) APIs that help\nyou develop your application faster. A key component of any BaaS is instant APIs over a database '),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"once you define your database schema, you should get data APIs instantly.")),(0,o.kt)("h2",{id:"comparing-apples-to-applesauce"},"Comparing Apples to Applesauce"),(0,o.kt)("p",null,"Apito and Firebase both offer APIs over a database while both of them provide this solution on top of a proprietary\ndatabase. We use nn optimized version of RocksDB. Soon Apito will be able to connect to several popular choices of\ndatabases including PostgreSQL, MySQL, Mariadb, Mongodb & ArangoDB. That is a topic of another discussion."),(0,o.kt)("p",null,"Firebase was originally designed exclusively as a realtime database. If your project does not need a real-time database\nthen using it is exteamly difficult for modern application development. "),(0,o.kt)("p",null,"Let me tell you why, "),(0,o.kt)("p",null,"Querying & Filtering your data is very difficult with Firebase, wherewith Apito you can execute bulk queries with complex\nfilters ( even geospatial queries ) Also, Once an application is in production, you will need to write complex queries,\nespecially for the purpose of Analytics or Business Intelligence. With Firebase, you are restricted to basic CRUD queries.\nThis is okay for rapid prototyping but does not lend itself to a production app."),(0,o.kt)("h3",{id:"database-design-migration--content-management"},"Database Design, Migration & Content Management"),(0,o.kt)("p",null,"This is probably one of the biggest gripes power users have with Firebase. On Firebase, you can only change data from\nthe client-side. This means you have to write a script to perform a schema evolution (which is error-prone and\nrisky if not performed in a transaction, or in sets of transactions) or handle the schema evolution in the app code\nitself! "),(0,o.kt)("p",null,"But on the other hand, On Apito, Migration happens instantly once you modify your model and publish it. This is similar\nto the natural developer workflow of taking changes in dev and then applying them in staging/production environments."),(0,o.kt)("h3",{id:"data-modeling"},"Data modeling"),(0,o.kt)("p",null,"Thanks to Apito's Versatile Model Builder, it supports various fields to model and structures your project,\nfor example, Single Line Text Field, Date Field, Number Field, Fields within Fields ( Array of Object) and\nthe Most important feature is the relation between models ( One-to-One, One-to-Many, Many-to-Many )\nIt is harder to model relationships between independent data models with Firebase's proprietary database\n(originally a realtime database). If you made a mistake early on in your modelling, migrating and changing\nto a new data model is hard."),(0,o.kt)("h3",{id:"role-based-permissions"},"Role based Permissions"),(0,o.kt)("p",null,"Firebase permissions can only capture rules based on the data within the current 'path' (node). "),(0,o.kt)("p",null,"On Apito, you can specify granular permissions based on roles. That can be attatched to any API endpoints & models.\n",(0,o.kt)("a",{parentName:"p",href:"/docs/console/adding-rbac-role-based-permissions-support-to-your-api"},"Read more here.")),(0,o.kt)("h3",{id:"a-back-end-for-saas-apps"},"A Back-end for SaaS Apps"),(0,o.kt)("p",null,"Firebase is a well-known backend-as-a-service. It has a ton of useful features that can all be tuned and tweaked to power\nthe back-end of a SaaS application. That said, they've made a much larger effort to be the cloud back-end for mobile apps.\nAs a developer building SaaS, you can configure Firebase services to suit your requirements, but it's always going to\nbe extra work. With Apito, that's pretty different. 8base designed its platform to best accommodate SaaS apps from day\none; with a GraphQL API for any web-client, or mobile, to consume. This naturally makes it ideal for developers\nlooking for a backend-as-a-service on any SaaS project. Why? Because things like authorization, multi-tenancy,\nuser administration, and a relational schema builder are all native to the platform."),(0,o.kt)("h2",{id:"to-summarize-our-points-apito-has-many-advantages-including"},"To summarize our points, Apito has many advantages including"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Easy Learning Curve"),(0,o.kt)("li",{parentName:"ul"},"Versatile Database Modeling"),(0,o.kt)("li",{parentName:"ul"},"Robust Content Management System"),(0,o.kt)("li",{parentName:"ul"},"Complex Query & Filtering"),(0,o.kt)("li",{parentName:"ul"},"Role based Permissions"),(0,o.kt)("li",{parentName:"ul"},"Build In Support for Multilingual Content"),(0,o.kt)("li",{parentName:"ul"},"Instant GraphQL & REST API Endpoints"),(0,o.kt)("li",{parentName:"ul"},"Webhooks"),(0,o.kt)("li",{parentName:"ul"},"Authentication Module"),(0,o.kt)("li",{parentName:"ul"},"Cloud Functions")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/apito_documentation/XJUZG5CEW9_Apito_Vs_Firebase.png",alt:"Apito vs Firebase Comparison"})),(0,o.kt)("h3",{id:"graphql-or-restful-api-why-not-both"},"GraphQL or RESTful API? Why not Both?"),(0,o.kt)("p",null,"Today, almost all apps are data-driven. Making sure a developer has access to the data they need when they need it, and\nas they need it, is super important. For the past decade, REST has been the API standard. While the world has benefited\nhugely from REST, it has some limitations. GraphQL, on the other hand, comes with some huge advantages when compared\nto REST. A single endpoint can support any query or mutation (a.k.a. update). "),(0,o.kt)("p",null,"Queries get defined on the client-side, meaning no more endpoint updates done by backend developers.\nQueries only return data that the developer wants.\nOut of the box, Firebase lets users build REST endpoints. You can set up a GraphQL engine on Firebase, but it takes a lot of time and a lot of know-how."),(0,o.kt)("h3",{id:"role-based-security"},"Role-Based Security"),(0,o.kt)("p",null,"Meanwhile, as everyone is out there building the sleekest, and most straightforward user interface that enchants\nthe pants off users, app security is too often being overlooked. That's why Firebase and Apito have security built\ndirectly into their products. Firebase offers the ability to set up role-based security using custom functions that\nget stored as rules. Every rule is then validated against each API requests. "),(0,o.kt)("p",null,"The developer can define all their custom authentication logic. Apito built role-based security directly into its\nplatform, and expose that to developers through a configurable interface. It makes adding permissions and roles for\nspecific actions on specific tables and fields super straight forward. It also supports role-based scoping of records\nusing custom filters. Pretty much, if developers follow either platform's documentation around how to set up\nauthorization, they won't have to worry about security. It's just up to them how long they want to take to get there."),(0,o.kt)("h3",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"There are millions of developers in the world, each with their nuanced preferences to specific stacks and tools.\nIn the greater software ecosystem, 1000s of tools and services exist to help support developers in building amazing\napps. Of all the tools, services, frameworks, platforms, and specifications, only a few stand out. "),(0,o.kt)("p",null,"Apito gives developers a back-end they need when building modern apps, the way that they would have wanted to build it themselves.\nBy configuring dozens of clutch back-end resources and offering them as a production-ready platform, you can easily write\nyour project-specific business logic with cloud function Knowing the whole time that security, scalability, database management,\nand the like are future proof."),(0,o.kt)("p",null,"A developer is going to come across both Apito and Firebase when researching backend-as-a-service platforms. Both\nplatforms are going to offer them similar features that are backed by different implementations. That said, the experience\nthat the developer has when using either platform is the real acid test."))}d.isMDXComponent=!0}}]);