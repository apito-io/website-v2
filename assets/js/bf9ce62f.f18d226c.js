"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[8858],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,ah:()=>d,kt:()=>m});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(o),m=a,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return o?n.createElement(g,i(i({ref:t},p),{},{components:o})):n.createElement(g,i({ref:t},p))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<r;d++)i[d]=o[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},61966:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=o(87462),a=(o(67294),o(3905));const r={id:"database-design",sidebar_label:"Database Design Intro",title:"Designing the Database for your Project",image:"https://cdn.apito.io/media/apito_documentation/XL8YIXTZO1_Apito_Console___Model.png",keywords:["database model","api design","api","database normalization","nosql","nosql database design"]},i=void 0,s={unversionedId:"model/database-design",id:"model/database-design",title:"Designing the Database for your Project",description:"Database design or modeling is the most crucial part of your project. In this article there will be a brief introduction about when and when not to create a data model,",source:"@site/docs/model/database-design.mdx",sourceDirName:"model",slug:"/model/database-design",permalink:"/docs/model/database-design",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model/database-design.mdx",tags:[],version:"current",frontMatter:{id:"database-design",sidebar_label:"Database Design Intro",title:"Designing the Database for your Project",image:"https://cdn.apito.io/media/apito_documentation/XL8YIXTZO1_Apito_Console___Model.png",keywords:["database model","api design","api","database normalization","nosql","nosql database design"]},sidebar:"docs",previous:{title:"Content/Database Modeling",permalink:"/docs/category/contentdatabase-modeling"},next:{title:"Single Record vs Multiple",permalink:"/docs/model/choice-between-models"}},l={},d=[{value:"Separation of Concern (Is it Model or Fields?)",id:"separation-of-concern-is-it-model-or-fields",level:3}],p={toc:d};function c(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{property:"og:type",content:"article"})),(0,a.kt)("p",null,"Database design or modeling is the most ",(0,a.kt)("strong",{parentName:"p"},"crucial part of your project"),". In this article there will be a brief introduction about when and when not to create a data model,\nand appreciate fundamental data design techniques. The primary audience for this article is application developers. We hope our guidance should help your to adopt an ",(0,a.kt)("strong",{parentName:"p"},"Agile DB")," for your Apito Project."),(0,a.kt)("p",null,"A Model represents a Single Entity of your project. If you already know SQL then you can compare it to columns. For example if you are starting an e-commerce project the common models\nare mostly ",(0,a.kt)("strong",{parentName:"p"},"Products"),", ",(0,a.kt)("strong",{parentName:"p"},"Orders"),", ",(0,a.kt)("strong",{parentName:"p"},"Stores"),", ",(0,a.kt)("strong",{parentName:"p"},"Users"),", ",(0,a.kt)("strong",{parentName:"p"},"Carts"),", ",(0,a.kt)("strong",{parentName:"p"},"Reports")," etc."),(0,a.kt)("p",null,"If you are designing a library management application the models are most likely to be ",(0,a.kt)("strong",{parentName:"p"},"Books"),", ",(0,a.kt)("strong",{parentName:"p"},"Authors"),", ",(0,a.kt)("strong",{parentName:"p"},"Profile"),", ",(0,a.kt)("strong",{parentName:"p"},"Booking")," etc."),(0,a.kt)("img",{alt:"Database Modeling",width:"auto",height:"auto",src:"https://cdn.apito.io/media/apito_documentation/XL8YIXTZO1_Apito_Console___Model.png"}),(0,a.kt)("h3",{id:"separation-of-concern-is-it-model-or-fields"},"Separation of Concern (Is it Model or Fields?)"),(0,a.kt)("p",null,"Sometimes designing a database could be challenging. For example if you are designing an Address Book API there might be ",(0,a.kt)("strong",{parentName:"p"},"Profile"),", ",(0,a.kt)("strong",{parentName:"p"},"Address"),", ",(0,a.kt)("strong",{parentName:"p"},"User")," model. You can notice here that\n",(0,a.kt)("strong",{parentName:"p"},"an address could also just be a field in Profile model or a Single separate model itself"),"."),(0,a.kt)("p",null,"So how you define your model entirely depends on your project specification. Some rules you can follow to see if you assumption are right or not when you are creating a model."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"One rule to define model would be, ",(0,a.kt)("inlineCode",{parentName:"li"},"if your entity contains multiple fields or complex then you can separate it into its own model"),"."),(0,a.kt)("li",{parentName:"ul"},"Another suggestion is to consider ",(0,a.kt)("inlineCode",{parentName:"li"},"if your entity is or will be connected to other entities"),". For example, if we take the Address entity as example,\nif it will be connected to other entities then it should become a model or else you can just list it as a part of profile, as a dynamic list.")))}c.isMDXComponent=!0}}]);