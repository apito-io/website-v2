"use strict";(self.webpackChunkapito_website_v_2=self.webpackChunkapito_website_v_2||[]).push([[3699],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,ah:()=>d,kt:()=>m});var a=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(o),m=n,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return o?a.createElement(h,i(i({ref:t},c),{},{components:o})):a.createElement(h,i({ref:t},c))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,i=new Array(r);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var d=2;d<r;d++)i[d]=o[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}p.displayName="MDXCreateElement"},68003:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=o(87462),n=(o(67294),o(3905)),r=o(81496);const i={id:"build-api-quick-start-guide",title:"Building API for your Content",sidebar_label:"Introduction"},l=void 0,s={unversionedId:"build-api-quick-start-guide",id:"build-api-quick-start-guide",title:"Building API for your Content",description:"{data.app} is a powerful Headless CMS on Cloud which helps you build API easily. You can think of it as a wordpress alternative.",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/build-api-quick-start-guide",permalink:"/docs/build-api-quick-start-guide",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quick-start.mdx",tags:[],version:"current",frontMatter:{id:"build-api-quick-start-guide",title:"Building API for your Content",sidebar_label:"Introduction"},sidebar:"docs",next:{title:"Using Apito As BaaS",permalink:"/docs/using-apito-as-backend-as-service"}},d={},c=[{value:"1. Create your project",id:"1-create-your-project",level:2},{value:"2. Model your Database with models &amp; fields",id:"2-model-your-database-with-models--fields",level:2},{value:"Fields",id:"fields",level:3},{value:"Relations",id:"relations",level:3},{value:"3. Insert your content",id:"3-insert-your-content",level:2},{value:"4. Explore Both GraphQL &amp; REST API",id:"4-explore-both-graphql--rest-api",level:2}],u={toc:c};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("span",null,r.l)," is a powerful Headless CMS on Cloud which helps you build API easily. You can think of it as a wordpress alternative. This guide will show you how you can use ",(0,n.kt)("span",null,r.l)," to build API for your next project or application.",(0,n.kt)("div",{style:{height:"20px"}}),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/shikho_website_v2_8ma77/30RCY24Q15_Apito_Console___Model.png",alt:"Apito Console - Model"})),(0,n.kt)("h2",{id:"1-create-your-project"},"1. Create your project"),(0,n.kt)("p",null,"Once you logged in to ",(0,n.kt)("inlineCode",{parentName:"p"},"Apito Console")," you will a Project Space like below. You can use this space to switch between your projects or create a new one."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/shikho_website_v2_8ma77/ML8SA3HW4U_projects.png",alt:"Apito Console"})),(0,n.kt)("p",null,"Now, for this quick started guide I will be creating an API for an ecommerce project, so lets gets started."),(0,n.kt)("p",null,"Click on the ",(0,n.kt)("inlineCode",{parentName:"p"},"Start a new Project")," button to initialize your project creation. Enter your project name and description and click Continue. On the next page select"),(0,n.kt)("span",null,r.l)," Cloud option to create your project faster. Other Database options will soon be available. Congratulation! you project is being build. Once it\u2019s done you can click Explore new project to switch to your newly created project and start building your API instantly.",(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/apito_documentation/NW09WSY56N_Create_Project.png",alt:"Apito Create a Project"})),(0,n.kt)("p",null,"The first step after creating your project is to define your project models. The most important part of designing an API is Database Modeling.\nLet\u2019s start by creating our first model. We all know Products and categories are a crucial part of an ecommerce API."),(0,n.kt)("h2",{id:"2-model-your-database-with-models--fields"},"2. Model your Database with models & fields"),(0,n.kt)("p",null,"Click on the Models Tab in the top navigation menu. Then from the left side bar, click on Add a model button. Now, write down the name of the model, in our case it will be product.\nNow click on the create button."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/apito_documentation/OUHYWT8VH4_Create_Model.png",alt:"Database Model Creation"})),(0,n.kt)("p",null,"Next, we will add few fields to our newly created product model."),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("p",null,"To add fields to a model click on the Add a Field button. First, we will add a title field of\ntype text and we will set the attribute of the title to required. Then, a description field of type, Rich Text. An Image field of type, Media. A Price field of type, Number.\nAnd last but not least a Rating field of type, Number. Now let\u2019s create another model named Category and add few fields in it. Those fields will be name,\nlabel and icons. ",(0,n.kt)("span",null,"{data.app}"),"  model & field builder is very versatile you can use it to design complex and nested model structure."),(0,n.kt)("h3",{id:"relations"},"Relations"),(0,n.kt)("p",null,"Next, we will create relations between them. For that you need to click on the\nAdd Field Button and then select Relations. Your relation creation between models depends on your project requirements."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/apito_documentation/G7NHVB7U6I_Add_Fields.png",alt:"Database Relations"})),(0,n.kt)("p",null,"For now, let\u2019s say, Product has many categories and categories has many products. Wow, as you can see, how easy it is to create entity relations between models in ",(0,n.kt)("span",null,"{data.app}")," .\nAlso, you can rename, delete and create fields & relations anytime you want. Now, that our database design of product and category model with relation is created,\nwe are ready to insert some contents."),(0,n.kt)("h2",{id:"3-insert-your-content"},"3. Insert your content"),(0,n.kt)("p",null,"Click on the Contents tab and select your model. As you can see, Table and forms are auto generated based on your database model design.\nLet me insert few products and categories into our database. To add a new product, click on the Add a new product button, which is on the right side of the product content table.\nYou will be able to see a drawer pops up from the right side of our table, which contains an auto generated specialized input form based on your model design."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/shikho_website_v2_8ma77/1ZGH5QE8U5_Apito_Console___Content.png",alt:"Content Management"})),(0,n.kt)("p",null,"Let\u2019s add our first product using this form into our database. Let\u2019s add our first category into our database.\nAs you can see while creating a category you can directly tag products with it. As you can see that product and category are now linked with each other."),(0,n.kt)("h2",{id:"4-explore-both-graphql--rest-api"},"4. Explore Both GraphQL & REST API"),(0,n.kt)("p",null,"Our Ecommerce API is ready. To explore our API lets goto the ",(0,n.kt)("inlineCode",{parentName:"p"},"API Explorer")," from the top of the navigation menu. As you can see, our GraphQL & REST API is ready for use.\nLet\u2019s run our first query. We will now ",(0,n.kt)("inlineCode",{parentName:"p"},"Search a product that contains blue in its name"),". Now click Run and as you can see its working! our ecommerce API is ready for integration."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/shikho_website_v2_8ma77/IN1TXKJPX5_Apito_Console___API.png",alt:"GraphQL Explorer"})),(0,n.kt)("p",null,"You can also use REST API if you project requires it. Apito Generates a Swagger Documentation which is compatible with OpenAPI."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn.apito.io/media/apito_documentation/09SNMJMSIX_RESTful_API_Explorer.png",alt:"Swagger UI"})))}p.isMDXComponent=!0},81496:e=>{e.exports={l:"Apito"}}}]);